PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL);
INSERT INTO django_migrations VALUES(1,'contenttypes','0001_initial','2025-05-13 02:08:25.807831');
INSERT INTO django_migrations VALUES(2,'contenttypes','0002_remove_content_type_name','2025-05-13 02:08:25.830517');
INSERT INTO django_migrations VALUES(3,'auth','0001_initial','2025-05-13 02:08:25.865947');
INSERT INTO django_migrations VALUES(4,'auth','0002_alter_permission_name_max_length','2025-05-13 02:08:25.876462');
INSERT INTO django_migrations VALUES(5,'auth','0003_alter_user_email_max_length','2025-05-13 02:08:25.886987');
INSERT INTO django_migrations VALUES(6,'auth','0004_alter_user_username_opts','2025-05-13 02:08:25.896713');
INSERT INTO django_migrations VALUES(7,'auth','0005_alter_user_last_login_null','2025-05-13 02:08:25.914429');
INSERT INTO django_migrations VALUES(8,'auth','0006_require_contenttypes_0002','2025-05-13 02:08:25.922334');
INSERT INTO django_migrations VALUES(9,'auth','0007_alter_validators_add_error_messages','2025-05-13 02:08:25.940794');
INSERT INTO django_migrations VALUES(10,'auth','0008_alter_user_username_max_length','2025-05-13 02:08:25.955922');
INSERT INTO django_migrations VALUES(11,'auth','0009_alter_user_last_name_max_length','2025-05-13 02:08:25.966700');
INSERT INTO django_migrations VALUES(12,'auth','0010_alter_group_name_max_length','2025-05-13 02:08:25.977447');
INSERT INTO django_migrations VALUES(13,'auth','0011_update_proxy_permissions','2025-05-13 02:08:25.998490');
INSERT INTO django_migrations VALUES(14,'auth','0012_alter_user_first_name_max_length','2025-05-13 02:08:26.007985');
INSERT INTO django_migrations VALUES(15,'accounts','0001_initial','2025-05-13 02:08:26.036020');
INSERT INTO django_migrations VALUES(16,'admin','0001_initial','2025-05-13 02:08:26.068328');
INSERT INTO django_migrations VALUES(17,'admin','0002_logentry_remove_auto_add','2025-05-13 02:08:26.109892');
INSERT INTO django_migrations VALUES(18,'admin','0003_logentry_add_action_flag_choices','2025-05-13 02:08:26.136378');
INSERT INTO django_migrations VALUES(19,'venues','0001_initial','2025-05-13 02:08:26.161037');
INSERT INTO django_migrations VALUES(20,'bookings','0001_initial','2025-05-13 02:08:26.323967');
INSERT INTO django_migrations VALUES(21,'notifications','0001_initial','2025-05-13 02:08:26.331136');
INSERT INTO django_migrations VALUES(22,'sessions','0001_initial','2025-05-13 02:08:26.353315');
INSERT INTO django_migrations VALUES(23,'token_blacklist','0001_initial','2025-05-13 02:08:26.414460');
INSERT INTO django_migrations VALUES(24,'token_blacklist','0002_outstandingtoken_jti_hex','2025-05-13 02:08:26.451366');
INSERT INTO django_migrations VALUES(25,'token_blacklist','0003_auto_20171017_2007','2025-05-13 02:08:26.477883');
INSERT INTO django_migrations VALUES(26,'token_blacklist','0004_auto_20171017_2013','2025-05-13 02:08:26.506212');
INSERT INTO django_migrations VALUES(27,'token_blacklist','0005_remove_outstandingtoken_jti','2025-05-13 02:08:26.527881');
INSERT INTO django_migrations VALUES(28,'token_blacklist','0006_auto_20171017_2113','2025-05-13 02:08:26.547837');
INSERT INTO django_migrations VALUES(29,'token_blacklist','0007_auto_20171017_2214','2025-05-13 02:08:26.584972');
INSERT INTO django_migrations VALUES(30,'token_blacklist','0008_migrate_to_bigautofield','2025-05-13 02:08:26.614582');
INSERT INTO django_migrations VALUES(31,'token_blacklist','0010_fix_migrate_to_bigautofield','2025-05-13 02:08:26.655084');
INSERT INTO django_migrations VALUES(32,'token_blacklist','0011_linearizes_history','2025-05-13 02:08:26.662256');
INSERT INTO django_migrations VALUES(33,'token_blacklist','0012_alter_outstandingtoken_user','2025-05-13 02:08:26.695828');
CREATE TABLE IF NOT EXISTS "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL);
INSERT INTO django_content_type VALUES(1,'admin','logentry');
INSERT INTO django_content_type VALUES(2,'auth','permission');
INSERT INTO django_content_type VALUES(3,'auth','group');
INSERT INTO django_content_type VALUES(4,'contenttypes','contenttype');
INSERT INTO django_content_type VALUES(5,'sessions','session');
INSERT INTO django_content_type VALUES(6,'token_blacklist','blacklistedtoken');
INSERT INTO django_content_type VALUES(7,'token_blacklist','outstandingtoken');
INSERT INTO django_content_type VALUES(8,'accounts','userprofile');
INSERT INTO django_content_type VALUES(9,'accounts','user');
INSERT INTO django_content_type VALUES(10,'accounts','adminprofile');
INSERT INTO django_content_type VALUES(11,'accounts','staffprofile');
INSERT INTO django_content_type VALUES(12,'accounts','studentprofile');
INSERT INTO django_content_type VALUES(13,'bookings','booking');
INSERT INTO django_content_type VALUES(14,'bookings','bookingfeedback');
INSERT INTO django_content_type VALUES(15,'bookings','bookingfile');
INSERT INTO django_content_type VALUES(16,'bookings','bookinghistory');
INSERT INTO django_content_type VALUES(17,'bookings','eventdetail');
INSERT INTO django_content_type VALUES(18,'notifications','emaillog');
INSERT INTO django_content_type VALUES(19,'venues','venue');
INSERT INTO django_content_type VALUES(20,'venues','venueavailability');
CREATE TABLE IF NOT EXISTS "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL);
INSERT INTO auth_permission VALUES(1,1,'add_logentry','Can add log entry');
INSERT INTO auth_permission VALUES(2,1,'change_logentry','Can change log entry');
INSERT INTO auth_permission VALUES(3,1,'delete_logentry','Can delete log entry');
INSERT INTO auth_permission VALUES(4,1,'view_logentry','Can view log entry');
INSERT INTO auth_permission VALUES(5,2,'add_permission','Can add permission');
INSERT INTO auth_permission VALUES(6,2,'change_permission','Can change permission');
INSERT INTO auth_permission VALUES(7,2,'delete_permission','Can delete permission');
INSERT INTO auth_permission VALUES(8,2,'view_permission','Can view permission');
INSERT INTO auth_permission VALUES(9,3,'add_group','Can add group');
INSERT INTO auth_permission VALUES(10,3,'change_group','Can change group');
INSERT INTO auth_permission VALUES(11,3,'delete_group','Can delete group');
INSERT INTO auth_permission VALUES(12,3,'view_group','Can view group');
INSERT INTO auth_permission VALUES(13,4,'add_contenttype','Can add content type');
INSERT INTO auth_permission VALUES(14,4,'change_contenttype','Can change content type');
INSERT INTO auth_permission VALUES(15,4,'delete_contenttype','Can delete content type');
INSERT INTO auth_permission VALUES(16,4,'view_contenttype','Can view content type');
INSERT INTO auth_permission VALUES(17,5,'add_session','Can add session');
INSERT INTO auth_permission VALUES(18,5,'change_session','Can change session');
INSERT INTO auth_permission VALUES(19,5,'delete_session','Can delete session');
INSERT INTO auth_permission VALUES(20,5,'view_session','Can view session');
INSERT INTO auth_permission VALUES(21,6,'add_blacklistedtoken','Can add blacklisted token');
INSERT INTO auth_permission VALUES(22,6,'change_blacklistedtoken','Can change blacklisted token');
INSERT INTO auth_permission VALUES(23,6,'delete_blacklistedtoken','Can delete blacklisted token');
INSERT INTO auth_permission VALUES(24,6,'view_blacklistedtoken','Can view blacklisted token');
INSERT INTO auth_permission VALUES(25,7,'add_outstandingtoken','Can add outstanding token');
INSERT INTO auth_permission VALUES(26,7,'change_outstandingtoken','Can change outstanding token');
INSERT INTO auth_permission VALUES(27,7,'delete_outstandingtoken','Can delete outstanding token');
INSERT INTO auth_permission VALUES(28,7,'view_outstandingtoken','Can view outstanding token');
INSERT INTO auth_permission VALUES(29,8,'add_userprofile','Can add user profile');
INSERT INTO auth_permission VALUES(30,8,'change_userprofile','Can change user profile');
INSERT INTO auth_permission VALUES(31,8,'delete_userprofile','Can delete user profile');
INSERT INTO auth_permission VALUES(32,8,'view_userprofile','Can view user profile');
INSERT INTO auth_permission VALUES(33,9,'add_user','Can add user');
INSERT INTO auth_permission VALUES(34,9,'change_user','Can change user');
INSERT INTO auth_permission VALUES(35,9,'delete_user','Can delete user');
INSERT INTO auth_permission VALUES(36,9,'view_user','Can view user');
INSERT INTO auth_permission VALUES(37,10,'add_adminprofile','Can add admin profile');
INSERT INTO auth_permission VALUES(38,10,'change_adminprofile','Can change admin profile');
INSERT INTO auth_permission VALUES(39,10,'delete_adminprofile','Can delete admin profile');
INSERT INTO auth_permission VALUES(40,10,'view_adminprofile','Can view admin profile');
INSERT INTO auth_permission VALUES(41,11,'add_staffprofile','Can add staff profile');
INSERT INTO auth_permission VALUES(42,11,'change_staffprofile','Can change staff profile');
INSERT INTO auth_permission VALUES(43,11,'delete_staffprofile','Can delete staff profile');
INSERT INTO auth_permission VALUES(44,11,'view_staffprofile','Can view staff profile');
INSERT INTO auth_permission VALUES(45,12,'add_studentprofile','Can add student profile');
INSERT INTO auth_permission VALUES(46,12,'change_studentprofile','Can change student profile');
INSERT INTO auth_permission VALUES(47,12,'delete_studentprofile','Can delete student profile');
INSERT INTO auth_permission VALUES(48,12,'view_studentprofile','Can view student profile');
INSERT INTO auth_permission VALUES(49,13,'add_booking','Can add booking');
INSERT INTO auth_permission VALUES(50,13,'change_booking','Can change booking');
INSERT INTO auth_permission VALUES(51,13,'delete_booking','Can delete booking');
INSERT INTO auth_permission VALUES(52,13,'view_booking','Can view booking');
INSERT INTO auth_permission VALUES(53,14,'add_bookingfeedback','Can add Booking Feedback');
INSERT INTO auth_permission VALUES(54,14,'change_bookingfeedback','Can change Booking Feedback');
INSERT INTO auth_permission VALUES(55,14,'delete_bookingfeedback','Can delete Booking Feedback');
INSERT INTO auth_permission VALUES(56,14,'view_bookingfeedback','Can view Booking Feedback');
INSERT INTO auth_permission VALUES(57,15,'add_bookingfile','Can add Booking File');
INSERT INTO auth_permission VALUES(58,15,'change_bookingfile','Can change Booking File');
INSERT INTO auth_permission VALUES(59,15,'delete_bookingfile','Can delete Booking File');
INSERT INTO auth_permission VALUES(60,15,'view_bookingfile','Can view Booking File');
INSERT INTO auth_permission VALUES(61,16,'add_bookinghistory','Can add Booking History');
INSERT INTO auth_permission VALUES(62,16,'change_bookinghistory','Can change Booking History');
INSERT INTO auth_permission VALUES(63,16,'delete_bookinghistory','Can delete Booking History');
INSERT INTO auth_permission VALUES(64,16,'view_bookinghistory','Can view Booking History');
INSERT INTO auth_permission VALUES(65,17,'add_eventdetail','Can add Event Detail');
INSERT INTO auth_permission VALUES(66,17,'change_eventdetail','Can change Event Detail');
INSERT INTO auth_permission VALUES(67,17,'delete_eventdetail','Can delete Event Detail');
INSERT INTO auth_permission VALUES(68,17,'view_eventdetail','Can view Event Detail');
INSERT INTO auth_permission VALUES(69,18,'add_emaillog','Can add email log');
INSERT INTO auth_permission VALUES(70,18,'change_emaillog','Can change email log');
INSERT INTO auth_permission VALUES(71,18,'delete_emaillog','Can delete email log');
INSERT INTO auth_permission VALUES(72,18,'view_emaillog','Can view email log');
INSERT INTO auth_permission VALUES(73,19,'add_venue','Can add venue');
INSERT INTO auth_permission VALUES(74,19,'change_venue','Can change venue');
INSERT INTO auth_permission VALUES(75,19,'delete_venue','Can delete venue');
INSERT INTO auth_permission VALUES(76,19,'view_venue','Can view venue');
INSERT INTO auth_permission VALUES(77,20,'add_venueavailability','Can add venue availability');
INSERT INTO auth_permission VALUES(78,20,'change_venueavailability','Can change venue availability');
INSERT INTO auth_permission VALUES(79,20,'delete_venueavailability','Can delete venue availability');
INSERT INTO auth_permission VALUES(80,20,'view_venueavailability','Can view venue availability');
CREATE TABLE IF NOT EXISTS "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(150) NOT NULL UNIQUE);
CREATE TABLE IF NOT EXISTS "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "email" varchar(254) NOT NULL UNIQUE, "first_name" varchar(100) NOT NULL, "last_name" varchar(100) NOT NULL, "user_type" varchar(20) NOT NULL, "student_id" varchar(20) NULL, "phone_number" varchar(20) NOT NULL);
CREATE TABLE IF NOT EXISTS "auth_user_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" bigint NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "auth_user_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" bigint NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "admin_profile" ("userprofile_ptr_id" bigint NOT NULL PRIMARY KEY REFERENCES "user_profile" ("id") DEFERRABLE INITIALLY DEFERRED, "admin_id" varchar(20) NULL);
CREATE TABLE IF NOT EXISTS "staff_profile" ("userprofile_ptr_id" bigint NOT NULL PRIMARY KEY REFERENCES "user_profile" ("id") DEFERRABLE INITIALLY DEFERRED, "staff_id" varchar(20) NULL, "department" varchar(100) NULL, "position" varchar(100) NULL);
CREATE TABLE IF NOT EXISTS "student_profile" ("userprofile_ptr_id" bigint NOT NULL PRIMARY KEY REFERENCES "user_profile" ("id") DEFERRABLE INITIALLY DEFERRED, "student_id" varchar(20) NULL, "major" varchar(100) NULL, "organization" varchar(100) NULL, "year" integer NOT NULL);
CREATE TABLE IF NOT EXISTS "user_profile" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "profile_picture" varchar(100) NOT NULL, "bio" text NULL, "date_of_birth" date NULL, "gender" varchar(10) NULL, "location" varchar(100) NULL, "user_id" bigint NOT NULL UNIQUE REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" bigint NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "action_time" datetime NOT NULL);
CREATE TABLE IF NOT EXISTS "venue" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "description" text NULL, "capacity" integer NOT NULL, "location" varchar(200) NOT NULL, "category" varchar(50) NULL, "handled_by" varchar NOT NULL, "is_available" bool NOT NULL, "requires_approval" bool NOT NULL, "requires_payment" bool NOT NULL, "requires_documents" bool NOT NULL, "features" text NOT NULL CHECK ((JSON_VALID("features") OR "features" IS NULL)));
CREATE TABLE IF NOT EXISTS "venue_availability" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "date" date NOT NULL, "start_time" time NOT NULL, "end_time" time NOT NULL, "is_available" bool NOT NULL, "venue_id" bigint NOT NULL REFERENCES "venue" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "booking" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "booking_code" varchar(20) NOT NULL UNIQUE, "title" varchar(255) NOT NULL, "description" text NOT NULL, "start_time" datetime NOT NULL, "end_time" datetime NOT NULL, "attendees_count" integer unsigned NOT NULL CHECK ("attendees_count" >= 0), "status" varchar(20) NOT NULL, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL, "payment_required" bool NOT NULL, "payment_amount" decimal NULL, "payment_completed" bool NOT NULL, "payment_reference" varchar(100) NOT NULL, "requires_approval" bool NOT NULL, "approval_date" datetime NULL, "documents_required" bool NOT NULL, "documents_verified" bool NOT NULL, "approved_by_id" bigint NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" bigint NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "venue_id" bigint NOT NULL REFERENCES "venue" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "booking_feedback" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content" text NOT NULL, "is_internal" bool NOT NULL, "feedback_type" varchar(50) NOT NULL, "created_at" datetime NOT NULL, "booking_id" bigint NOT NULL REFERENCES "booking" ("id") DEFERRABLE INITIALLY DEFERRED, "staff_id" bigint NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "booking_file" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "file" varchar(100) NOT NULL, "file_name" varchar(255) NOT NULL, "file_type" varchar(50) NOT NULL, "document_type" varchar(100) NOT NULL, "description" text NOT NULL, "uploaded_at" datetime NOT NULL, "is_verified" bool NOT NULL, "verified_at" datetime NULL, "booking_id" bigint NOT NULL REFERENCES "booking" ("id") DEFERRABLE INITIALLY DEFERRED, "uploaded_by_id" bigint NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "verified_by_id" bigint NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "booking_history" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "previous_status" varchar(20) NOT NULL, "new_status" varchar(20) NOT NULL, "timestamp" datetime NOT NULL, "comment" text NOT NULL, "handled_by_role" varchar(50) NOT NULL, "booking_id" bigint NOT NULL REFERENCES "booking" ("id") DEFERRABLE INITIALLY DEFERRED, "changed_by_id" bigint NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "booking_event_detail" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "event_type" varchar(100) NOT NULL, "purpose" text NOT NULL, "equipment_needed" text NOT NULL, "special_requests" text NOT NULL, "setup_time" datetime NULL, "teardown_time" datetime NULL, "budget" decimal NULL, "organizer_name" varchar(255) NOT NULL, "organizer_contact" varchar(100) NOT NULL, "event_schedule" text NOT NULL, "booking_id" bigint NOT NULL UNIQUE REFERENCES "booking" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "email_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "recipient_email" varchar(254) NOT NULL, "subject" varchar(200) NOT NULL, "message" text NOT NULL, "sent_at" datetime NOT NULL, "status" varchar(20) NOT NULL);
CREATE TABLE IF NOT EXISTS "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL);
CREATE TABLE IF NOT EXISTS "token_blacklist_blacklistedtoken" ("blacklisted_at" datetime NOT NULL, "token_id" bigint NOT NULL UNIQUE REFERENCES "token_blacklist_outstandingtoken" ("id") DEFERRABLE INITIALLY DEFERRED, "id" integer NOT NULL PRIMARY KEY AUTOINCREMENT);
CREATE TABLE IF NOT EXISTS "token_blacklist_outstandingtoken" ("token" text NOT NULL, "created_at" datetime NULL, "expires_at" datetime NOT NULL, "user_id" bigint NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "jti" varchar(255) NOT NULL UNIQUE, "id" integer NOT NULL PRIMARY KEY AUTOINCREMENT);
DELETE FROM sqlite_sequence;
INSERT INTO sqlite_sequence VALUES('django_migrations',33);
INSERT INTO sqlite_sequence VALUES('django_content_type',20);
INSERT INTO sqlite_sequence VALUES('auth_permission',80);
INSERT INTO sqlite_sequence VALUES('auth_group',0);
INSERT INTO sqlite_sequence VALUES('user_profile',0);
INSERT INTO sqlite_sequence VALUES('django_admin_log',0);
INSERT INTO sqlite_sequence VALUES('token_blacklist_blacklistedtoken',0);
INSERT INTO sqlite_sequence VALUES('token_blacklist_outstandingtoken',0);
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE UNIQUE INDEX "auth_user_groups_user_id_group_id_94350c0c_uniq" ON "auth_user_groups" ("user_id", "group_id");
CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id");
CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id");
CREATE UNIQUE INDEX "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" ON "auth_user_user_permissions" ("user_id", "permission_id");
CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id");
CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id");
CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "venue_availability_venue_id_date_start_time_end_time_dc38011e_uniq" ON "venue_availability" ("venue_id", "date", "start_time", "end_time");
CREATE INDEX "venue_availability_venue_id_89d52640" ON "venue_availability" ("venue_id");
CREATE INDEX "booking_status_b99f68_idx" ON "booking" ("status");
CREATE INDEX "booking_user_id_acf7f7_idx" ON "booking" ("user_id");
CREATE INDEX "booking_venue_i_1ab500_idx" ON "booking" ("venue_id");
CREATE INDEX "booking_start_t_616860_idx" ON "booking" ("start_time", "end_time");
CREATE INDEX "booking_approved_by_id_30bf1330" ON "booking" ("approved_by_id");
CREATE INDEX "booking_user_id_1bd7cb6e" ON "booking" ("user_id");
CREATE INDEX "booking_venue_id_204dff63" ON "booking" ("venue_id");
CREATE INDEX "booking_feedback_booking_id_5b8eba55" ON "booking_feedback" ("booking_id");
CREATE INDEX "booking_feedback_staff_id_6d3fc320" ON "booking_feedback" ("staff_id");
CREATE INDEX "booking_file_booking_id_fad8c254" ON "booking_file" ("booking_id");
CREATE INDEX "booking_file_uploaded_by_id_c058674d" ON "booking_file" ("uploaded_by_id");
CREATE INDEX "booking_file_verified_by_id_3e5fe9ef" ON "booking_file" ("verified_by_id");
CREATE INDEX "booking_history_booking_id_517fef05" ON "booking_history" ("booking_id");
CREATE INDEX "booking_history_changed_by_id_5efc11ee" ON "booking_history" ("changed_by_id");
CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX "token_blacklist_outstandingtoken_user_id_83bc629a" ON "token_blacklist_outstandingtoken" ("user_id");
COMMIT;
